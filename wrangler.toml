# Cloudflare Workers Configuration for ArbEdge
# Production-ready configuration with all service bindings

name = "arb-edge"
main = "build/worker/shim.mjs"
compatibility_date = "2024-01-01"
compatibility_flags = ["nodejs_compat"]

# Build configuration for Rust
[build]
command = "chmod +x build.sh && ./build.sh"

# Environment variables (non-sensitive)
[vars]
ENVIRONMENT = "production"
LOG_LEVEL = "info"
RATE_LIMIT_REQUESTS_PER_MINUTE = "60"
CACHE_TTL_SECONDS = "300"
SUPER_ADMIN_USER_ID = "1082762347"
EXCHANGES = "binance,bybit,okx,bitget"
ARBITRAGE_THRESHOLD = "0.001"
TELEGRAM_CHAT_ID = "1082762347"
TELEGRAM_TEST_MODE = "false"

# KV Namespaces
[[kv_namespaces]]
binding = "ArbEdgeKV"
id = "1018c576bf664c15afe0c53d85df8ed0"
preview_id = "9db67fd132d64e93bcdf3cebebd07bc6"



[[kv_namespaces]]
binding = "PROD_BOT_MARKET_CACHE"
id = "c5b936f1c0eb4f50ae9519f64bd3c5d9"
preview_id = "9db67fd132d64e93bcdf3cebebd07bc6"

[[kv_namespaces]]
binding = "PROD_BOT_SESSION_STORE"
id = "d090d03b365b4619800d96ad1da5ac8c"
preview_id = "9db67fd132d64e93bcdf3cebebd07bc6"

# D1 Database
[[d1_databases]]
binding = "ArbEdgeD1"
database_name = "prod-arb-edge"
database_id = "879bf844-93b2-433d-9319-6e6065bbfdfd"
migrations_dir = "sql/migrations"

# R2 Buckets
[[r2_buckets]]
binding = "ArbEdgeR2"
bucket_name = "prod-arb-edge"

[[r2_buckets]]
binding = "ArbEdgeR2_Analytics"
bucket_name = "prod-arb-edge-analytics"

# Queues (for message consumption via #[event(queue)])
# Note: Queues require a paid plan - commented out for free tier deployment
# [[queues.consumers]]
# queue = "prod-opportunity-distribution"
# max_batch_size = 10
# max_batch_timeout = 30
# max_retries = 3
# dead_letter_queue = "dead-letter-queue"

# [[queues.consumers]]
# queue = "prod-user-notifications"
# max_batch_size = 5
# max_batch_timeout = 15
# max_retries = 3
# dead_letter_queue = "dead-letter-queue"

# [[queues.consumers]]
# queue = "prod-analytics-events"
# max_batch_size = 100
# max_batch_timeout = 60
# max_retries = 2
# dead_letter_queue = "dead-letter-queue"

# Durable Objects (if needed)
# [[durable_objects.bindings]]
# name = "PROD_TRADING_SESSION"
# class_name = "TradingSession"

# Pipelines (direct bindings available)
# Note: Pipelines may require a paid plan - commented out for free tier deployment
# [[pipelines]]
# pipeline = "prod-market-data-pipeline"
# binding = "PROD_MARKET_DATA_PIPELINE"

# [[pipelines]]
# pipeline = "prod-analytics-pipeline"
# binding = "PROD_ANALYTICS_PIPELINE"

# [[pipelines]]
# pipeline = "prod-audit-pipeline"
# binding = "PROD_AUDIT_PIPELINE"

# Analytics Engine dataset
# Note: Analytics Engine is configured via HTTP API, not bindings
# Dataset name: arbitrage_analytics

[[analytics_engine_datasets]]
binding = "ARBITRAGE_ANALYTICS"
dataset = "arbitrage_analytics"

# Cron Triggers - Optimized Tiered Maintenance System
[triggers]
# Tier 1: High-frequency tasks (every 5 minutes) - critical operations
# Tier 2: Medium-frequency tasks (every 30 minutes) - routine maintenance  
# Tier 3: Low-frequency tasks (every 6 hours) - deep cleanup
crons = ["*/5 * * * *", "*/30 * * * *", "0 */6 * * *"]



# Limits and performance
[limits]
cpu_ms = 30000  # 30 seconds max CPU time

logpush = true
[observability.logs]
enabled = true


# Development environment
[env.development]
vars = { ENVIRONMENT = "development", LOG_LEVEL = "debug", TELEGRAM_TEST_MODE = "true" }

# Staging environment  
[env.staging]
vars = { ENVIRONMENT = "staging", LOG_LEVEL = "info" }

# Production environment
[env.production]
vars = { ENVIRONMENT = "production", LOG_LEVEL = "debug", TELEGRAM_TEST_MODE = "false" }
