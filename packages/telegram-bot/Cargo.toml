[package]
name = "celebrum-ai-telegram-bot"
version = "0.1.0"
edition = "2021"
authors = ["ArbEdge Team"]
description = "Telegram Bot for ArbEdge Arbitrage Platform"

[lib]
name = "celebrum_ai_telegram_bot"
path = "lib.rs"
crate-type = ["cdylib", "rlib"]

[dependencies]
# Cloudflare Workers runtime
worker = "0.6"

# Async support
futures = "0.3"

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# Logging
console_error_panic_hook = "0.1"
console_log = "1.0"
log = "0.4"

# Error handling
anyhow = "1.0"
thiserror = "1.0"

# Async trait support
async-trait = "0.1"

# Time
chrono = { version = "0.4", features = ["serde"] }

# UUID
uuid = { version = "1.10", features = ["v4", "serde"] }

[dependencies.web-sys]
version = "0.3"
features = [
  "console",
  "Headers",
  "Request",
  "RequestInit",
  "RequestMode",
  "Response",
  "ResponseInit",
  "Window",
]

[dependencies.wasm-bindgen]
version = "0.2"

[dependencies.wasm-bindgen-futures]
version = "0.4"

# Target-specific dependencies for non-WASM (native) builds
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
tokio = { version = "1.0", features = ["full"] }
reqwest = { version = "0.12", features = ["json", "rustls-tls"] }
teloxide = { version = "0.12", features = ["webhooks", "rustls"] }

# Target-specific dependencies for WASM builds
[target.'cfg(target_arch = "wasm32")'.dependencies]
tokio = { version = "1.0", features = ["sync", "macros", "io-util", "rt", "time"] }
reqwest = { version = "0.12", features = ["json"], default-features = false }
# Note: teloxide is not compatible with WASM, so we'll handle Telegram API calls directly