name: CI/CD & Security Analysis

on:
  push:
    branches: [development, main, feature/refactor-to-rust]
  pull_request:
    branches: [development, main]
  workflow_dispatch:

jobs:
  test:
    name: Test & Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy, rust-src
          override: true

      - name: Add WASM target
        run: rustup target add wasm32-unknown-unknown

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v3
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo build
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Setup Node.js (for wrangler)
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"

      - name: Install wrangler
        run: npm install -g wrangler@latest

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Run linter
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Run tests
        run: cargo test --verbose

      - name: Build for WASM
        run: cargo build --target wasm32-unknown-unknown --release

      - name: Test wrangler build
        run: wrangler deploy --dry-run

  codeql:
    name: CodeQL Security Analysis
    runs-on: ubuntu-latest
    needs: test
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: rust

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Add WASM target
        run: rustup target add wasm32-unknown-unknown

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  deploy:
    name: Deploy to Cloudflare
    needs: [test, codeql]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rust-src
          override: true

      - name: Add WASM target
        run: rustup target add wasm32-unknown-unknown

      - name: Setup Node.js (for wrangler)
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"

      - name: Install wrangler
        run: npm install -g wrangler@latest

      - name: Deploy to Cloudflare Workers
        run: wrangler deploy
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
